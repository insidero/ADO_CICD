{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "demoCustomerADFn4hwlpa5u46ig"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SqlDataLoader')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy latest data",
						"description": "dsklfn",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DhcInputDataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DhcOutputDatasetSink",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Verify Schema in SQL DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Current Schema Has More Columns",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Current Schema Has Same Columns",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Current Schema Has Less Columns",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "IF NOT EXISTS ( SELECT  * FROM sys.schemas WHERE name = N'definitive_HC') \n\nBEGIN\n\n    EXEC('CREATE SCHEMA [definitive_HC] AUTHORIZATION [dbo]');\n\nselect Count(*) from sys.symmetric_keys;\n\nEND\n\nELSE \n\nBEGIN\n\nselect Count(*) from sys.symmetric_keys;\n\nEND",
								"queryTimeout": "00:10:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlDbStagingSource",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "LoadIntoStagingTable_SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Verify Schema in SQL DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadIntoStagingTable_SQL",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "LoadIntoOperationalTable_SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Compare Data Type",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadIntoOperationalTable_SQL",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Create Views in SQL DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LoadIntoOperationalTable_SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "IF EXISTS ( SELECT  * FROM sys.schemas WHERE name = N'definitive_HC') \n\nBEGIN\nIF NOT EXISTS (select * from sys.views where name = N'dhc_view')\n    EXEC('create view definitive_HC.dhc_view as select Hospital_Type, Hq_State, Hq_Zip_Code, County_Name, State_Name, Num_Licensed_Beds, Num_Staffed_Beds, Num_Icu_Beds, Adult_Icu_Beds, Pedi_Icu_Beds, Bed_Utilization, Potential_Increase_In_Bed_Capac, Avg_Ventilator_Usage from definitive_HC.operationaldhc;')\nselect Count(*) from sys.symmetric_keys;\n\nEND\n\nELSE \n\nBEGIN\n\nselect Count(*) from sys.symmetric_keys;\n\nEND",
								"queryTimeout": "00:10:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlOperationalSink",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Retain Previous Schema",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Current Schema Has More Columns",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Current Schema Has Same Columns",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Current Schema Has Less Columns",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "save_current_schema_dataset",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "retain_last_schema_dataset",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Save Current Schema",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Retain Previous Schema",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DhcOutputDatasetSource",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "save_current_schema_dataset",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Get_Metadata_Of_Last_CSV",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy latest data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "save_current_schema_dataset",
								"type": "DatasetReference"
							},
							"fieldList": [
								"structure",
								"columnCount"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get_Metadata_Of_Current_CSV",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy latest data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DhcOutputDatasetSource",
								"type": "DatasetReference"
							},
							"fieldList": [
								"structure",
								"columnCount"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Current Schema Has Less Columns",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get_Metadata_Of_Last_CSV",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Get_Metadata_Of_Current_CSV",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Get_Metadata_Of_Last_CSV').output.columnCount,activity('Get_Metadata_Of_Current_CSV').output.columnCount)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait And Continue 1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Alert Current Schema Has Less Columns",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Current Schema Has More Columns",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get_Metadata_Of_Last_CSV",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Get_Metadata_Of_Current_CSV",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Get_Metadata_Of_Current_CSV').output.columnCount,activity('Get_Metadata_Of_Last_CSV').output.columnCount)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait And Continue 2",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Alert Current Schema Has More Columns",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Current Schema Has Same Columns",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get_Metadata_Of_Last_CSV",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Get_Metadata_Of_Current_CSV",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(activity('Get_Metadata_Of_Last_CSV').output.columnCount,activity('Get_Metadata_Of_Current_CSV').output.columnCount),not(equals(activity('Get_Metadata_Of_Last_CSV').output.structure,activity('Get_Metadata_Of_Current_CSV').output.structure)))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait And Continue 3",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Alert Equal Number But Different Names Or Arrangement",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Get_Metadata_Of_Current_Staging_Table",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "LoadIntoStagingTable_SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SqlDbStagingSink",
								"type": "DatasetReference"
							},
							"fieldList": [
								"structure",
								"columnCount"
							]
						}
					},
					{
						"name": "Get_Metadata_Of_Previous_Staging_Table",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "LoadIntoStagingTable_SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "save_sql_schema_to_detect_datatype_change",
								"type": "DatasetReference"
							},
							"fieldList": [
								"structure",
								"columnCount"
							]
						}
					},
					{
						"name": "Compare Data Type",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Get_Metadata_Of_Current_Staging_Table",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Get_Metadata_Of_Previous_Staging_Table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(variables('index')),min(sub(activity('Get_Metadata_Of_Current_Staging_Table').output.columnCount,1),sub(activity('Get_Metadata_Of_Previous_Staging_Table').output.columnCount,1)))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Increment",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "increment",
										"value": {
											"value": "@string(add(int(variables('index')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Index",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Increment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "index",
										"value": {
											"value": "@variables('increment')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Check Data Type Change",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Index",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(equals(activity('Get_Metadata_Of_Current_Staging_Table').output.structure[int(variables('index'))].physicalName,activity('Get_Metadata_Of_Previous_Staging_Table').output.structure[int(variables('index'))].physicalName),not(equals(activity('Get_Metadata_Of_Current_Staging_Table').output.structure[int(variables('index'))].physicalType,activity('Get_Metadata_Of_Previous_Staging_Table').output.structure[int(variables('index'))].physicalType)))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait And Continue 4",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Change In Data Type",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "dataTypeChange",
													"value": "True"
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Alert If Change In Data Type",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Compare Data Type",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('dataTypeChange'),'True')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait And Continue 5",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Alert Change In Data Type",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Save Current Sql Schema",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Retain Last Sql Schema",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "IF OBJECT_ID('[save_schema].[detect_datatype_change]', 'U') IS NOT NULL\n\nBEGIN\n\nDROP TABLE [save_schema].[detect_datatype_change]; \n\nEND",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlDbStagingSink",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "save_sql_schema_to_detect_datatype_change",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Retain Last Sql Schema",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Alert If Change In Data Type",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "IF OBJECT_ID('[retain_schema].[compare_datatype_change]', 'U') IS NOT NULL\n\nBEGIN\n\nDROP TABLE [retain_schema].[compare_datatype_change];\n\nEND",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "save_sql_schema_to_detect_datatype_change",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "retain_sql_schema_to_compare_datatype_change",
								"type": "DatasetReference"
							}
						]
					}
				],
				"variables": {
					"index": {
						"type": "String",
						"defaultValue": "-1"
					},
					"increment": {
						"type": "String"
					},
					"dataTypeChange": {
						"type": "String",
						"defaultValue": "False"
					}
				},
				"folder": {
					"name": "CovidDefinitiveHC"
				},
				"annotations": [],
				"lastPublishTime": "2021-01-21T15:40:10Z"
			},
			"dependsOn": []
		}
	]
}